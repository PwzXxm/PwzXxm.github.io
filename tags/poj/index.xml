<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>POJ - Tag - PwzXxm</title><link>https://pwzxxm.com/tags/poj/</link><description>POJ - Tag - PwzXxm</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>patrick.weizhixu@hotmail.com (PwzXxm)</managingEditor><webMaster>patrick.weizhixu@hotmail.com (PwzXxm)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 23 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://pwzxxm.com/tags/poj/" rel="self" type="application/rss+xml"/><item><title>POJ 3279 Fliptile</title><link>https://pwzxxm.com/poj-3279/</link><pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate><author>PwzXxm</author><guid>https://pwzxxm.com/poj-3279/</guid><description><![CDATA[<p>There are \(M \times N\) \((1 \le M, N \le 15)\)square tiles. Each tile can be flipped and the color of tile can change between black(1) and white(0).</p>
<p>When you flip a tile, 4 adjacent tiles will also be flipped. Note that the four adjacent flipped tiles will NOT cause their adjacent tiles to flip.</p>
<p>Given a configuration, find the minimum number of flips so that all square tiles become white. If having the minimum number is the same, choose the least lexicographical one<sup>1</sup>.</p>]]></description></item><item><title>POJ 3268 Silver Cow Party</title><link>https://pwzxxm.com/poj-3268/</link><pubDate>Sat, 14 May 2016 00:00:00 +0000</pubDate><author>PwzXxm</author><guid>https://pwzxxm.com/poj-3268/</guid><description>&lt;p>There are one cow from each \(N\) (\(1 \le N \le 1000\)) farms want to go to the number X farm to have a party, hurrah! One cow from each farm need to go to the party and go back. There are \(M\) (\(1 \le M \le 100,000\)) weighted (represents time) one-direction roads connects pairs of roads. Cows are smart though, they want to go via the shortest path. The question is, what is the longest time the cow will take.&lt;/p></description></item><item><title>POJ 2376 Cleaning Shifts</title><link>https://pwzxxm.com/poj-2376/</link><pubDate>Wed, 16 Mar 2016 00:00:00 +0000</pubDate><author>PwzXxm</author><guid>https://pwzxxm.com/poj-2376/</guid><description><![CDATA[<p>\(N\) (\(1 \le N \le 25,000\)) cows, each cow only available for a interval of time.
\(T\) (\(1 \le T \le 1,000,000\)) shifts.
Find minimum number of cows to complete \(T\) shifts.</p>
<p>Link: <a href="http://poj.org/problem?id=2376" target="_blank" rel="noopener noreffer ">http://poj.org/problem?id=2376</a></p>
<h3 id="notes">Notes</h3>
<ul>
<li>Each shift must has at least one cow assigned to it.</li>
<li>A cow finishes after the end time. That is, if there are two cows, start and end at \((1, 3)\) and \((4, 10)\) respectively. It is considered as an continuous internal and accepted case for \(T = 10\).</li>
<li>There can not have any gap between these cows&rsquo;s working intervals.</li>
<li>Use <code>scanf()</code> for input otherwise it will run out of the time limit.</li>
</ul>
<br>
<br>
<br>
<br>
<br>
<h3 id="solution">Solution</h3>
<p>Sort cows by ending time. Using greedy that for each interval, find the cow which has latest end time and before the current end time. As the vector is sorted, the first cow we find is the answer.</p>]]></description></item><item><title>POJ 3050 Hopscotch</title><link>https://pwzxxm.com/poj-3050/</link><pubDate>Mon, 14 Mar 2016 22:22:00 +1100</pubDate><author>PwzXxm</author><guid>https://pwzxxm.com/poj-3050/</guid><description><![CDATA[<p>There is a 5 * 5 array filled with integers. You can only go up, down, left and right. You can start on any point in the array and can only move 5 times. Therefore, you will get 6 integers.</p>
<p>Find the number of distinct integers you can constructed.</p>
<p>Link: <a href="http://poj.org/problem?id=3050" target="_blank" rel="noopener noreffer ">http://poj.org/problem?id=3050</a></p>
<br>
<br>
<br>
<br>
<br>
<h3 id="solution">Solution</h3>
<p>I use a set to avoid same sequences. Since there are only 6 steps and the array is only 5*5, dfs each point, add into the set.</p>]]></description></item><item><title>POJ 3187 Backward Digits Sums</title><link>https://pwzxxm.com/poj-3187/</link><pubDate>Mon, 14 Mar 2016 00:00:00 +0000</pubDate><author>PwzXxm</author><guid>https://pwzxxm.com/poj-3187/</guid><description><![CDATA[<p>There are 1 to \(N\) digits (\(1\le N \le 10\)) in certain order. Add adjacent numbers together to get the next line, until the there is only one number left.(Just like Pascal&rsquo;s triangle)
For example, there are 3 integers:
$$ 1, 2, 3 $$
$$ 3, 5 $$
$$ 8 $$</p>
<p>So, given \(N\) and the final sum, find the lexicographically least ordering of integers.</p>
<p>Link: <a href="http://poj.org/problem?id=3187" target="_blank" rel="noopener noreffer ">http://poj.org/problem?id=3187</a></p>
<h3 id="notes">Notes:</h3>
<ul>
<li>
<p>Be aware of that the question is asking 1 to \(N\) digits, so we don&rsquo;t have to test all possible permutations from 1 to 10.</p>]]></description></item></channel></rss>